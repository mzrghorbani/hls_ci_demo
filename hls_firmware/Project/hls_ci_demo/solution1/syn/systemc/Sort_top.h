// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Sort_top_HH_
#define _Sort_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Sort_top_mux_83_3bkb.h"
#include "Sort_top_mux_53_3cud.h"

namespace ap_rtl {

struct Sort_top : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > a_0;
    sc_in< sc_lv<32> > a_1;
    sc_in< sc_lv<32> > a_2;
    sc_in< sc_lv<32> > a_3;
    sc_in< sc_lv<32> > a_4;
    sc_out< sc_lv<32> > b_0;
    sc_out< sc_logic > b_0_ap_vld;
    sc_out< sc_lv<32> > b_1;
    sc_out< sc_logic > b_1_ap_vld;
    sc_out< sc_lv<32> > b_2;
    sc_out< sc_logic > b_2_ap_vld;
    sc_out< sc_lv<32> > b_3;
    sc_out< sc_logic > b_3_ap_vld;
    sc_out< sc_lv<32> > b_4;
    sc_out< sc_logic > b_4_ap_vld;


    // Module declarations
    Sort_top(sc_module_name name);
    SC_HAS_PROCESS(Sort_top);

    ~Sort_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Sort_top_mux_83_3bkb<1,1,32,32,32,32,32,32,32,32,3,32>* Sort_top_mux_83_3bkb_U1;
    Sort_top_mux_83_3bkb<1,1,32,32,32,32,32,32,32,32,3,32>* Sort_top_mux_83_3bkb_U2;
    Sort_top_mux_53_3cud<1,1,32,32,32,32,32,3,32>* Sort_top_mux_53_3cud_U3;
    Sort_top_mux_83_3bkb<1,1,32,32,32,32,32,32,32,32,3,32>* Sort_top_mux_83_3bkb_U4;
    Sort_top_mux_83_3bkb<1,1,32,32,32,32,32,32,32,32,3,32>* Sort_top_mux_83_3bkb_U5;
    Sort_top_mux_83_3bkb<1,1,32,32,32,32,32,32,32,32,3,32>* Sort_top_mux_83_3bkb_U6;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter6;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > a_0_read_reg_613;
    sc_signal< sc_lv<32> > a_0_read_reg_613_pp0_iter1_reg;
    sc_signal< sc_lv<32> > a_0_read_reg_613_pp0_iter2_reg;
    sc_signal< sc_lv<32> > a_1_read_reg_626;
    sc_signal< sc_lv<32> > a_1_read_reg_626_pp0_iter1_reg;
    sc_signal< sc_lv<32> > a_1_read_reg_626_pp0_iter2_reg;
    sc_signal< sc_lv<32> > a_2_read_reg_635;
    sc_signal< sc_lv<32> > a_2_read_reg_635_pp0_iter1_reg;
    sc_signal< sc_lv<32> > a_2_read_reg_635_pp0_iter2_reg;
    sc_signal< sc_lv<32> > a_3_read_reg_651;
    sc_signal< sc_lv<32> > a_3_read_reg_651_pp0_iter1_reg;
    sc_signal< sc_lv<32> > a_3_read_reg_651_pp0_iter2_reg;
    sc_signal< sc_lv<32> > a_4_read_reg_666;
    sc_signal< sc_lv<32> > a_4_read_reg_666_pp0_iter1_reg;
    sc_signal< sc_lv<32> > a_4_read_reg_666_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln18_fu_127_p2;
    sc_signal< sc_lv<1> > icmp_ln18_reg_676;
    sc_signal< sc_lv<2> > select_ln18_fu_146_p3;
    sc_signal< sc_lv<2> > select_ln18_reg_682;
    sc_signal< sc_lv<1> > icmp_ln18_2_fu_172_p2;
    sc_signal< sc_lv<1> > icmp_ln18_2_reg_687;
    sc_signal< sc_lv<3> > select_ln21_fu_206_p3;
    sc_signal< sc_lv<3> > select_ln21_reg_692;
    sc_signal< sc_lv<1> > icmp_ln22_1_fu_214_p2;
    sc_signal< sc_lv<1> > icmp_ln22_1_reg_698;
    sc_signal< sc_lv<1> > icmp_ln22_2_fu_220_p2;
    sc_signal< sc_lv<1> > icmp_ln22_2_reg_705;
    sc_signal< sc_lv<1> > icmp_ln22_3_fu_226_p2;
    sc_signal< sc_lv<1> > icmp_ln22_3_reg_713;
    sc_signal< sc_lv<32> > select_ln22_3_fu_265_p3;
    sc_signal< sc_lv<32> > select_ln22_3_reg_722;
    sc_signal< sc_lv<32> > select_ln22_3_reg_722_pp0_iter4_reg;
    sc_signal< sc_lv<32> > select_ln22_4_fu_271_p3;
    sc_signal< sc_lv<32> > select_ln22_4_reg_736;
    sc_signal< sc_lv<32> > select_ln22_4_reg_736_pp0_iter4_reg;
    sc_signal< sc_lv<32> > select_ln22_7_fu_287_p3;
    sc_signal< sc_lv<32> > select_ln22_7_reg_746;
    sc_signal< sc_lv<32> > select_ln22_7_reg_746_pp0_iter4_reg;
    sc_signal< sc_lv<32> > select_ln22_9_fu_299_p3;
    sc_signal< sc_lv<32> > select_ln22_9_reg_753;
    sc_signal< sc_lv<32> > select_ln22_9_reg_753_pp0_iter4_reg;
    sc_signal< sc_lv<32> > select_ln22_9_reg_753_pp0_iter5_reg;
    sc_signal< sc_lv<32> > select_ln22_13_fu_324_p3;
    sc_signal< sc_lv<32> > select_ln22_13_reg_758;
    sc_signal< sc_lv<32> > select_ln22_13_reg_758_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln18_4_fu_330_p2;
    sc_signal< sc_lv<1> > icmp_ln18_4_reg_771;
    sc_signal< sc_lv<1> > icmp_ln18_5_fu_344_p2;
    sc_signal< sc_lv<1> > icmp_ln18_5_reg_776;
    sc_signal< sc_lv<3> > select_ln21_1_fu_392_p3;
    sc_signal< sc_lv<3> > select_ln21_1_reg_782;
    sc_signal< sc_lv<1> > icmp_ln22_4_fu_400_p2;
    sc_signal< sc_lv<1> > icmp_ln22_4_reg_787;
    sc_signal< sc_lv<1> > icmp_ln22_5_fu_406_p2;
    sc_signal< sc_lv<1> > icmp_ln22_5_reg_795;
    sc_signal< sc_lv<1> > icmp_ln22_6_fu_412_p2;
    sc_signal< sc_lv<1> > icmp_ln22_6_reg_801;
    sc_signal< sc_lv<32> > select_ln22_14_fu_431_p3;
    sc_signal< sc_lv<32> > select_ln22_14_reg_808;
    sc_signal< sc_lv<32> > select_ln22_17_fu_447_p3;
    sc_signal< sc_lv<32> > select_ln22_17_reg_816;
    sc_signal< sc_lv<32> > select_ln22_19_fu_459_p3;
    sc_signal< sc_lv<32> > select_ln22_19_reg_822;
    sc_signal< sc_lv<32> > select_ln22_22_fu_477_p3;
    sc_signal< sc_lv<32> > select_ln22_22_reg_827;
    sc_signal< sc_lv<1> > icmp_ln18_7_fu_483_p2;
    sc_signal< sc_lv<1> > icmp_ln18_7_reg_839;
    sc_signal< sc_lv<1> > icmp_ln18_8_fu_497_p2;
    sc_signal< sc_lv<1> > icmp_ln18_8_reg_844;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > select_ln18_6_fu_133_p3;
    sc_signal< sc_lv<1> > icmp_ln18_1_fu_138_p2;
    sc_signal< sc_lv<2> > zext_ln18_fu_143_p1;
    sc_signal< sc_lv<3> > phi_ln18_1_i_fu_158_p9;
    sc_signal< sc_lv<32> > phi_ln18_1_i_fu_158_p10;
    sc_signal< sc_lv<2> > select_ln18_1_fu_177_p3;
    sc_signal< sc_lv<3> > zext_ln18_2_fu_183_p1;
    sc_signal< sc_lv<32> > phi_ln18_2_i_fu_187_p10;
    sc_signal< sc_lv<1> > icmp_ln18_3_fu_201_p2;
    sc_signal< sc_lv<1> > icmp_ln22_fu_242_p2;
    sc_signal< sc_lv<32> > select_ln22_fu_247_p3;
    sc_signal< sc_lv<32> > select_ln22_1_fu_253_p3;
    sc_signal< sc_lv<32> > select_ln22_2_fu_259_p3;
    sc_signal< sc_lv<32> > select_ln22_5_fu_276_p3;
    sc_signal< sc_lv<32> > select_ln22_6_fu_281_p3;
    sc_signal< sc_lv<32> > tmp_fu_232_p7;
    sc_signal< sc_lv<32> > select_ln22_8_fu_293_p3;
    sc_signal< sc_lv<32> > select_ln22_10_fu_306_p3;
    sc_signal< sc_lv<32> > select_ln22_11_fu_312_p3;
    sc_signal< sc_lv<32> > select_ln22_12_fu_318_p3;
    sc_signal< sc_lv<32> > select_ln18_2_fu_336_p3;
    sc_signal< sc_lv<1> > or_ln18_fu_357_p2;
    sc_signal< sc_lv<2> > select_ln18_3_fu_350_p3;
    sc_signal< sc_lv<2> > select_ln18_4_fu_361_p3;
    sc_signal< sc_lv<3> > zext_ln18_3_fu_369_p1;
    sc_signal< sc_lv<32> > phi_ln18_4_i_fu_373_p10;
    sc_signal< sc_lv<1> > icmp_ln18_6_fu_387_p2;
    sc_signal< sc_lv<32> > select_ln22_15_fu_436_p3;
    sc_signal< sc_lv<32> > select_ln22_16_fu_441_p3;
    sc_signal< sc_lv<32> > phi_ln_i_fu_418_p10;
    sc_signal< sc_lv<32> > select_ln22_18_fu_453_p3;
    sc_signal< sc_lv<32> > select_ln22_20_fu_466_p3;
    sc_signal< sc_lv<32> > select_ln22_21_fu_471_p3;
    sc_signal< sc_lv<32> > select_ln18_5_fu_489_p3;
    sc_signal< sc_lv<1> > or_ln18_1_fu_503_p2;
    sc_signal< sc_lv<3> > select_ln21_2_fu_507_p3;
    sc_signal< sc_lv<3> > select_ln21_3_fu_514_p3;
    sc_signal< sc_lv<1> > icmp_ln22_7_fu_536_p2;
    sc_signal< sc_lv<1> > icmp_ln22_8_fu_548_p2;
    sc_signal< sc_lv<32> > phi_ln21_1_i_fu_522_p10;
    sc_signal< sc_lv<32> > select_ln22_24_fu_554_p3;
    sc_signal< sc_lv<32> > select_ln22_26_fu_570_p3;
    sc_signal< sc_lv<32> > select_ln22_23_fu_542_p3;
    sc_signal< sc_lv<32> > select_ln22_27_fu_576_p3;
    sc_signal< sc_lv<1> > icmp_ln21_fu_583_p2;
    sc_signal< sc_lv<1> > xor_ln21_fu_589_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to5;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_block_state7_pp0_stage0_iter6();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to5();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_b_0();
    void thread_b_0_ap_vld();
    void thread_b_1();
    void thread_b_1_ap_vld();
    void thread_b_2();
    void thread_b_2_ap_vld();
    void thread_b_3();
    void thread_b_3_ap_vld();
    void thread_b_4();
    void thread_b_4_ap_vld();
    void thread_icmp_ln18_1_fu_138_p2();
    void thread_icmp_ln18_2_fu_172_p2();
    void thread_icmp_ln18_3_fu_201_p2();
    void thread_icmp_ln18_4_fu_330_p2();
    void thread_icmp_ln18_5_fu_344_p2();
    void thread_icmp_ln18_6_fu_387_p2();
    void thread_icmp_ln18_7_fu_483_p2();
    void thread_icmp_ln18_8_fu_497_p2();
    void thread_icmp_ln18_fu_127_p2();
    void thread_icmp_ln21_fu_583_p2();
    void thread_icmp_ln22_1_fu_214_p2();
    void thread_icmp_ln22_2_fu_220_p2();
    void thread_icmp_ln22_3_fu_226_p2();
    void thread_icmp_ln22_4_fu_400_p2();
    void thread_icmp_ln22_5_fu_406_p2();
    void thread_icmp_ln22_6_fu_412_p2();
    void thread_icmp_ln22_7_fu_536_p2();
    void thread_icmp_ln22_8_fu_548_p2();
    void thread_icmp_ln22_fu_242_p2();
    void thread_or_ln18_1_fu_503_p2();
    void thread_or_ln18_fu_357_p2();
    void thread_phi_ln18_1_i_fu_158_p9();
    void thread_select_ln18_1_fu_177_p3();
    void thread_select_ln18_2_fu_336_p3();
    void thread_select_ln18_3_fu_350_p3();
    void thread_select_ln18_4_fu_361_p3();
    void thread_select_ln18_5_fu_489_p3();
    void thread_select_ln18_6_fu_133_p3();
    void thread_select_ln18_fu_146_p3();
    void thread_select_ln21_1_fu_392_p3();
    void thread_select_ln21_2_fu_507_p3();
    void thread_select_ln21_3_fu_514_p3();
    void thread_select_ln21_fu_206_p3();
    void thread_select_ln22_10_fu_306_p3();
    void thread_select_ln22_11_fu_312_p3();
    void thread_select_ln22_12_fu_318_p3();
    void thread_select_ln22_13_fu_324_p3();
    void thread_select_ln22_14_fu_431_p3();
    void thread_select_ln22_15_fu_436_p3();
    void thread_select_ln22_16_fu_441_p3();
    void thread_select_ln22_17_fu_447_p3();
    void thread_select_ln22_18_fu_453_p3();
    void thread_select_ln22_19_fu_459_p3();
    void thread_select_ln22_1_fu_253_p3();
    void thread_select_ln22_20_fu_466_p3();
    void thread_select_ln22_21_fu_471_p3();
    void thread_select_ln22_22_fu_477_p3();
    void thread_select_ln22_23_fu_542_p3();
    void thread_select_ln22_24_fu_554_p3();
    void thread_select_ln22_26_fu_570_p3();
    void thread_select_ln22_27_fu_576_p3();
    void thread_select_ln22_2_fu_259_p3();
    void thread_select_ln22_3_fu_265_p3();
    void thread_select_ln22_4_fu_271_p3();
    void thread_select_ln22_5_fu_276_p3();
    void thread_select_ln22_6_fu_281_p3();
    void thread_select_ln22_7_fu_287_p3();
    void thread_select_ln22_8_fu_293_p3();
    void thread_select_ln22_9_fu_299_p3();
    void thread_select_ln22_fu_247_p3();
    void thread_xor_ln21_fu_589_p2();
    void thread_zext_ln18_2_fu_183_p1();
    void thread_zext_ln18_3_fu_369_p1();
    void thread_zext_ln18_fu_143_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
